{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Georgi\\\\Documents\\\\taita\\\\dashboard\\\\dashboard-front\\\\src\\\\components\\\\Row.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { useAccordionButton } from 'react-bootstrap/AccordionButton';\nimport Card from 'react-bootstrap/Card';\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CustomToggle(_ref) {\n  _s();\n  let {\n    children,\n    eventKey\n  } = _ref;\n  const decoratedOnClick = useAccordionButton(eventKey, () => console.log('totally custom!'));\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    style: {\n      backgroundColor: 'pink'\n    },\n    onClick: decoratedOnClick,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n}\n_s(CustomToggle, \"W60grZeeiqyb/tF6UzcIogMlV4I=\", false, function () {\n  return [useAccordionButton];\n});\n_c = CustomToggle;\nfunction Row(_ref2) {\n  let {\n    question,\n    response1,\n    response2\n  } = _ref2;\n  //const [isOpen, setIsOpen] = useState(false);\n\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    defaultActiveKey: \"0\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(CustomToggle, {\n          eventKey: \"0\",\n          children: \"Click me!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n        eventKey: \"0\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: \"Hello! I'm the body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(CustomToggle, {\n          eventKey: \"1\",\n          children: \"Click me!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n        eventKey: \"1\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: \"Hello! I'm another body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Row;\nexport default Row;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomToggle\");\n$RefreshReg$(_c2, \"Row\");","map":{"version":3,"names":["React","useState","Accordion","useAccordionButton","Card","Question","jsxDEV","_jsxDEV","CustomToggle","_ref","_s","children","eventKey","decoratedOnClick","console","log","type","style","backgroundColor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","Row","_ref2","question","response1","response2","defaultActiveKey","Header","Collapse","Body","_c2","$RefreshReg$"],"sources":["C:/Users/Georgi/Documents/taita/dashboard/dashboard-front/src/components/Row.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { useAccordionButton } from 'react-bootstrap/AccordionButton';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Question from \"./Question\"\r\n\r\n\r\nfunction CustomToggle({ children, eventKey }) {\r\n    const decoratedOnClick = useAccordionButton(eventKey, () =>\r\n      console.log('totally custom!'),\r\n    );\r\n  \r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        style={{ backgroundColor: 'pink' }}\r\n        onClick={decoratedOnClick}\r\n      >\r\n        {children}\r\n      </button>\r\n    );\r\n  }\r\n\r\nfunction Row({ question, response1, response2 }) {\r\n    //const [isOpen, setIsOpen] = useState(false);\r\n  \r\n    return (\r\n        <Accordion defaultActiveKey=\"0\">\r\n            <Card>\r\n                <Card.Header>\r\n                    <CustomToggle eventKey=\"0\">Click me!</CustomToggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                <   Card.Body>Hello! I'm the body</Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n            <Card>\r\n                <Card.Header>\r\n                    <CustomToggle eventKey=\"1\">Click me!</CustomToggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"1\">\r\n                    <Card.Body>Hello! I'm another body</Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        </Accordion>\r\n    );\r\n  }\r\n\r\nexport default Row;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}