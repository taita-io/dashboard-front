{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Georgi\\\\Documents\\\\taita\\\\dashboard\\\\dashboard-front\\\\src\\\\components\\\\Row.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Accordion, Card, Button, Table } from 'react-bootstrap';\nimport Response from \"./Response\";\nimport Question from \"./Question\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Row(_ref) {\n  _s();\n  let {\n    question,\n    response1,\n    response2\n  } = _ref;\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n        as: Button,\n        variant: \"link\",\n        eventKey: \"0\",\n        onClick: () => setIsOpen(!isOpen),\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          borderless: true,\n          size: \"sm\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Question, {\n                  summaryText: question.summaryText,\n                  fullText: question.fullText,\n                  isOpen: isOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 17,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Response, {\n                  summaryText: response1.summaryText,\n                  fullText: response1.fullText,\n                  isOpen: isOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 18,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 18,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Response, {\n                  summaryText: response2.summaryText,\n                  fullText: response2.fullText,\n                  isOpen: isOpen\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 19,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n      eventKey: \"0\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n}\n_s(Row, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useState","Accordion","Card","Button","Table","Response","Question","jsxDEV","_jsxDEV","Row","_ref","_s","question","response1","response2","isOpen","setIsOpen","children","Header","Toggle","as","variant","eventKey","onClick","borderless","size","summaryText","fullText","fileName","_jsxFileName","lineNumber","columnNumber","Collapse","Body","_c","$RefreshReg$"],"sources":["C:/Users/Georgi/Documents/taita/dashboard/dashboard-front/src/components/Row.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Accordion, Card, Button, Table } from 'react-bootstrap';\r\nimport Response from \"./Response\"\r\nimport Question from \"./Question\"\r\n\r\n\r\nfunction Row({ question, response1, response2 }) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n  \r\n    return (\r\n      <Card>\r\n        <Card.Header>\r\n          <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" onClick={() => setIsOpen(!isOpen)}>\r\n            <Table borderless size=\"sm\">\r\n              <tbody>\r\n                <tr>\r\n                  <td><Question summaryText={question.summaryText} fullText={question.fullText} isOpen={isOpen} /></td>\r\n                  <td><Response summaryText={response1.summaryText} fullText={response1.fullText} isOpen={isOpen} /></td>\r\n                  <td><Response summaryText={response2.summaryText} fullText={response2.fullText} isOpen={isOpen} /></td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </Accordion.Toggle>\r\n        </Card.Header>\r\n        <Accordion.Collapse eventKey=\"0\">\r\n          <Card.Body>\r\n          </Card.Body>\r\n        </Accordion.Collapse>\r\n      </Card>\r\n    );\r\n  }\r\n\r\nexport default Row;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}