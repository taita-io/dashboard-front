{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Georgi\\\\Documents\\\\taita\\\\dashboard\\\\dashboard-front\\\\src\\\\components\\\\Dropdown.js\";\nimport React, { useState } from 'react';\nimport styles from './Dropdown.module.css';\nimport Select, { components } from 'react-select';\n\n/*\r\nfunction Dropdown({ options, iconUrl, color }) {\r\n    return (\r\n        <select className={styles.jobSelection}>\r\n        {iconUrl && <img className={styles.vectorIcon} alt=\"\" src={iconUrl} />}\r\n            {options.map((option, index) => (\r\n                <option key={index} value={option}>\r\n                {option}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    );\r\n  }\r\n  \r\n*/\n\n/*\r\nfunction Dropdown({ options, iconUrl, color }) {\r\n    return (\r\n      <div className={styles.dropdownContainer}>\r\n        {iconUrl && <img className={styles.vectorIcon} alt=\"\" src={iconUrl} />}\r\n        <select className={styles.jobSelection}>\r\n          {options.map((option, index) => (\r\n            <option key={index} value={option}>\r\n              {option}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  }*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dropdown(_ref) {\n  let {\n    options,\n    iconUrl,\n    color\n  } = _ref;\n  // Convert options to the format expected by react-select\n  const selectOptions = options.map(option => ({\n    value: option,\n    label: option\n  }));\n\n  // Custom Control component to include the icon\n  const Control = _ref2 => {\n    let {\n      children,\n      ...props\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dropdownControl,\n      children: [iconUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.vectorIcon,\n        alt: \"\",\n        src: iconUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(components.Control, {\n        ...props,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Select, {\n    className: styles.jobSelection,\n    options: selectOptions,\n    isClearable: true,\n    isSearchable: true,\n    components: {\n      Control\n    },\n    styles: {\n      control: provided => ({\n        ...provided,\n        height: 52,\n        borderColor: 'var(--color-lightgray)',\n        boxShadow: 'none',\n        '&:hover': {\n          borderColor: 'var(--color-lightgray)'\n        }\n      }),\n      option: provided => ({\n        ...provided,\n        padding: '15px 0'\n      })\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n}\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","styles","Select","components","jsxDEV","_jsxDEV","Dropdown","_ref","options","iconUrl","color","selectOptions","map","option","value","label","Control","_ref2","children","props","className","dropdownControl","vectorIcon","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","jobSelection","isClearable","isSearchable","control","provided","height","borderColor","boxShadow","padding","_c","$RefreshReg$"],"sources":["C:/Users/Georgi/Documents/taita/dashboard/dashboard-front/src/components/Dropdown.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './Dropdown.module.css';\r\nimport Select, { components } from 'react-select';\r\n\r\n\r\n\r\n/*\r\nfunction Dropdown({ options, iconUrl, color }) {\r\n    return (\r\n        <select className={styles.jobSelection}>\r\n        {iconUrl && <img className={styles.vectorIcon} alt=\"\" src={iconUrl} />}\r\n            {options.map((option, index) => (\r\n                <option key={index} value={option}>\r\n                {option}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    );\r\n  }\r\n  \r\n*/\r\n\r\n/*\r\nfunction Dropdown({ options, iconUrl, color }) {\r\n    return (\r\n      <div className={styles.dropdownContainer}>\r\n        {iconUrl && <img className={styles.vectorIcon} alt=\"\" src={iconUrl} />}\r\n        <select className={styles.jobSelection}>\r\n          {options.map((option, index) => (\r\n            <option key={index} value={option}>\r\n              {option}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  }*/\r\n\r\n  function Dropdown({ options, iconUrl, color }) {\r\n    // Convert options to the format expected by react-select\r\n    const selectOptions = options.map(option => ({ value: option, label: option }));\r\n  \r\n    // Custom Control component to include the icon\r\n    const Control = ({ children, ...props }) => (\r\n      <div className={styles.dropdownControl}>\r\n        {iconUrl && <img className={styles.vectorIcon} alt=\"\" src={iconUrl} />}\r\n        <components.Control {...props}>\r\n          {children}\r\n        </components.Control>\r\n      </div>\r\n    );\r\n  \r\n    return (\r\n      <Select \r\n        className={styles.jobSelection}\r\n        options={selectOptions}\r\n        isClearable\r\n        isSearchable\r\n        components={{ Control }}\r\n        styles={{\r\n          control: (provided) => ({\r\n            ...provided,\r\n            height: 52,\r\n            borderColor: 'var(--color-lightgray)',\r\n            boxShadow: 'none',\r\n            '&:hover': {\r\n              borderColor: 'var(--color-lightgray)',\r\n            },\r\n          }),\r\n          option: (provided) => ({\r\n            ...provided,\r\n            padding: '15px 0',\r\n          }),\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  \r\n  export default Dropdown;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,MAAM,IAAIC,UAAU,QAAQ,cAAc;;AAIjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA,SAAAC,MAAA,IAAAC,OAAA;AAgBE,SAASC,QAAQA,CAAAC,IAAA,EAA8B;EAAA,IAA7B;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAAH,IAAA;EAC3C;EACA,MAAMI,aAAa,GAAGH,OAAO,CAACI,GAAG,CAACC,MAAM,KAAK;IAAEC,KAAK,EAAED,MAAM;IAAEE,KAAK,EAAEF;EAAO,CAAC,CAAC,CAAC;;EAE/E;EACA,MAAMG,OAAO,GAAGC,KAAA;IAAA,IAAC;MAAEC,QAAQ;MAAE,GAAGC;IAAM,CAAC,GAAAF,KAAA;IAAA,oBACrCZ,OAAA;MAAKe,SAAS,EAAEnB,MAAM,CAACoB,eAAgB;MAAAH,QAAA,GACpCT,OAAO,iBAAIJ,OAAA;QAAKe,SAAS,EAAEnB,MAAM,CAACqB,UAAW;QAACC,GAAG,EAAC,EAAE;QAACC,GAAG,EAAEf;MAAQ;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtEvB,OAAA,CAACF,UAAU,CAACa,OAAO;QAAA,GAAKG,KAAK;QAAAD,QAAA,EAC1BA;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA,CACP;EAED,oBACEvB,OAAA,CAACH,MAAM;IACLkB,SAAS,EAAEnB,MAAM,CAAC4B,YAAa;IAC/BrB,OAAO,EAAEG,aAAc;IACvBmB,WAAW;IACXC,YAAY;IACZ5B,UAAU,EAAE;MAAEa;IAAQ,CAAE;IACxBf,MAAM,EAAE;MACN+B,OAAO,EAAGC,QAAQ,KAAM;QACtB,GAAGA,QAAQ;QACXC,MAAM,EAAE,EAAE;QACVC,WAAW,EAAE,wBAAwB;QACrCC,SAAS,EAAE,MAAM;QACjB,SAAS,EAAE;UACTD,WAAW,EAAE;QACf;MACF,CAAC,CAAC;MACFtB,MAAM,EAAGoB,QAAQ,KAAM;QACrB,GAAGA,QAAQ;QACXI,OAAO,EAAE;MACX,CAAC;IACH;EAAE;IAAAZ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN;AAACU,EAAA,GAtCQhC,QAAQ;AAwCjB,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}