{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Georgi\\\\Documents\\\\taita\\\\dashboard\\\\dashboard-front\\\\src\\\\components\\\\Table.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Accordion, AccordionItem, AccordionItemHeading, AccordionItemButton, AccordionItemPanel } from 'react-accessible-accordion';\nimport './Table.css'; // import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Question(_ref) {\n  let {\n    summaryText,\n    fullText,\n    isOpen\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: isOpen ? fullText : summaryText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n_c = Question;\nfunction Response(_ref2) {\n  let {\n    summaryText,\n    fullText,\n    isOpen\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: isOpen ? fullText : summaryText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n_c2 = Response;\nfunction Row(_ref3) {\n  _s();\n  let {\n    question,\n    response1,\n    response2\n  } = _ref3;\n  const [isOpen, setIsOpen] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(AccordionItem, {\n    children: [/*#__PURE__*/_jsxDEV(AccordionItemHeading, {\n      children: /*#__PURE__*/_jsxDEV(AccordionItemButton, {\n        onClick: () => setIsOpen(!isOpen),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(Question, {\n            summaryText: question.summaryText,\n            fullText: question.fullText,\n            isOpen: isOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Response, {\n            summaryText: response1.summaryText,\n            fullText: response1.fullText,\n            isOpen: isOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Response, {\n            summaryText: response2.summaryText,\n            fullText: response2.fullText,\n            isOpen: isOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccordionItemPanel, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c3 = Row;\nfunction Table(_ref4) {\n  let {\n    data\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(Accordion, {\n    className: \"table\",\n    children: data.map((row, index) => /*#__PURE__*/_jsxDEV(Row, {\n      question: row.question,\n      response1: row.response1,\n      response2: row.response2\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c4 = Table;\nexport default Table;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Question\");\n$RefreshReg$(_c2, \"Response\");\n$RefreshReg$(_c3, \"Row\");\n$RefreshReg$(_c4, \"Table\");","map":{"version":3,"names":["React","Accordion","AccordionItem","AccordionItemHeading","AccordionItemButton","AccordionItemPanel","jsxDEV","_jsxDEV","Question","_ref","summaryText","fullText","isOpen","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Response","_ref2","_c2","Row","_ref3","_s","question","response1","response2","setIsOpen","useState","onClick","className","_c3","Table","_ref4","data","map","row","index","_c4","$RefreshReg$"],"sources":["C:/Users/Georgi/Documents/taita/dashboard/dashboard-front/src/components/Table.js"],"sourcesContent":["import React from 'react';\r\nimport { Accordion, AccordionItem, AccordionItemHeading, AccordionItemButton, AccordionItemPanel } from 'react-accessible-accordion';\r\nimport './Table.css'; // import the CSS file\r\n\r\nfunction Question({ summaryText, fullText, isOpen }) {\r\n  return <p>{isOpen ? fullText : summaryText}</p>;\r\n}\r\n\r\nfunction Response({ summaryText, fullText, isOpen }) {\r\n  return <p>{isOpen ? fullText : summaryText}</p>;\r\n}\r\n\r\nfunction Row({ question, response1, response2 }) {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  return (\r\n    <AccordionItem>\r\n      <AccordionItemHeading>\r\n        <AccordionItemButton onClick={() => setIsOpen(!isOpen)}>\r\n          <div className=\"row\">\r\n            <Question summaryText={question.summaryText} fullText={question.fullText} isOpen={isOpen} />\r\n            <Response summaryText={response1.summaryText} fullText={response1.fullText} isOpen={isOpen} />\r\n            <Response summaryText={response2.summaryText} fullText={response2.fullText} isOpen={isOpen} />\r\n          </div>\r\n        </AccordionItemButton>\r\n      </AccordionItemHeading>\r\n      <AccordionItemPanel>\r\n        {/* You can add more detailed information here if needed */}\r\n      </AccordionItemPanel>\r\n    </AccordionItem>\r\n  );\r\n}\r\n\r\nfunction Table({ data }) {\r\n  return (\r\n    <Accordion className=\"table\">\r\n      {data.map((row, index) => (\r\n        <Row key={index} question={row.question} response1={row.response1} response2={row.response2} />\r\n      ))}\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default Table;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}