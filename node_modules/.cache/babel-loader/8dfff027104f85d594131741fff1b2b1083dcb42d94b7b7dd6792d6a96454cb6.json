{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Georgi\\\\Documents\\\\taita\\\\dashboard\\\\dashboard-front\\\\src\\\\components\\\\Dropdown.js\";\nimport React, { useState } from 'react';\nimport styles from './Dropdown.module.css';\nimport Select from 'react-select';\n\n/*\r\nfunction Dropdown({ options, iconUrl, color }) {\r\n    return (\r\n        <select className={styles.jobSelection}>\r\n        {iconUrl && <img className={styles.vectorIcon} alt=\"\" src={iconUrl} />}\r\n            {options.map((option, index) => (\r\n                <option key={index} value={option}>\r\n                {option}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    );\r\n  }\r\n  \r\n*/\n\n/*\r\nfunction Dropdown({ options, iconUrl, color }) {\r\n    return (\r\n      <div className={styles.dropdownContainer}>\r\n        {iconUrl && <img className={styles.vectorIcon} alt=\"\" src={iconUrl} />}\r\n        <select className={styles.jobSelection}>\r\n          {options.map((option, index) => (\r\n            <option key={index} value={option}>\r\n              {option}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  }*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dropdown(_ref) {\n  let {\n    options,\n    iconUrl,\n    color\n  } = _ref;\n  // Convert options to the format expected by react-select\n  const selectOptions = options.map(option => ({\n    value: option,\n    label: option\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.dropdownContainer,\n    children: [iconUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.vectorIcon,\n      alt: \"\",\n      src: iconUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      className: styles.jobSelection,\n      options: selectOptions,\n      isClearable: true,\n      isSearchable: true,\n      styles: {\n        control: provided => ({\n          ...provided,\n          height: 52,\n          borderColor: 'var(--color-lightgray)',\n          boxShadow: 'none',\n          '&:hover': {\n            borderColor: 'var(--color-lightgray)'\n          }\n        }),\n        option: provided => ({\n          ...provided,\n          padding: '15px 0'\n        })\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n}\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","useState","styles","Select","jsxDEV","_jsxDEV","Dropdown","_ref","options","iconUrl","color","selectOptions","map","option","value","label","className","dropdownContainer","children","vectorIcon","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","jobSelection","isClearable","isSearchable","control","provided","height","borderColor","boxShadow","padding","_c","$RefreshReg$"],"sources":["C:/Users/Georgi/Documents/taita/dashboard/dashboard-front/src/components/Dropdown.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './Dropdown.module.css';\r\nimport Select from 'react-select';\r\n\r\n\r\n\r\n/*\r\nfunction Dropdown({ options, iconUrl, color }) {\r\n    return (\r\n        <select className={styles.jobSelection}>\r\n        {iconUrl && <img className={styles.vectorIcon} alt=\"\" src={iconUrl} />}\r\n            {options.map((option, index) => (\r\n                <option key={index} value={option}>\r\n                {option}\r\n                </option>\r\n            ))}\r\n        </select>\r\n    );\r\n  }\r\n  \r\n*/\r\n\r\n/*\r\nfunction Dropdown({ options, iconUrl, color }) {\r\n    return (\r\n      <div className={styles.dropdownContainer}>\r\n        {iconUrl && <img className={styles.vectorIcon} alt=\"\" src={iconUrl} />}\r\n        <select className={styles.jobSelection}>\r\n          {options.map((option, index) => (\r\n            <option key={index} value={option}>\r\n              {option}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  }*/\r\n\r\n  function Dropdown({ options, iconUrl, color }) {\r\n    // Convert options to the format expected by react-select\r\n    const selectOptions = options.map(option => ({ value: option, label: option }));\r\n  \r\n    return (\r\n      <div className={styles.dropdownContainer}>\r\n        {iconUrl && <img className={styles.vectorIcon} alt=\"\" src={iconUrl} />}\r\n        <Select \r\n          className={styles.jobSelection}\r\n          options={selectOptions}\r\n          isClearable\r\n          isSearchable\r\n          styles={{\r\n            control: (provided) => ({\r\n              ...provided,\r\n              height: 52,\r\n              borderColor: 'var(--color-lightgray)',\r\n              boxShadow: 'none',\r\n              '&:hover': {\r\n                borderColor: 'var(--color-lightgray)',\r\n              },\r\n            }),\r\n            option: (provided) => ({\r\n              ...provided,\r\n              padding: '15px 0',\r\n            }),\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\r\nexport default Dropdown;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,MAAM,MAAM,cAAc;;AAIjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA,SAAAC,MAAA,IAAAC,OAAA;AAgBE,SAASC,QAAQA,CAAAC,IAAA,EAA8B;EAAA,IAA7B;IAAEC,OAAO;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAAH,IAAA;EAC3C;EACA,MAAMI,aAAa,GAAGH,OAAO,CAACI,GAAG,CAACC,MAAM,KAAK;IAAEC,KAAK,EAAED,MAAM;IAAEE,KAAK,EAAEF;EAAO,CAAC,CAAC,CAAC;EAE/E,oBACER,OAAA;IAAKW,SAAS,EAAEd,MAAM,CAACe,iBAAkB;IAAAC,QAAA,GACtCT,OAAO,iBAAIJ,OAAA;MAAKW,SAAS,EAAEd,MAAM,CAACiB,UAAW;MAACC,GAAG,EAAC,EAAE;MAACC,GAAG,EAAEZ;IAAQ;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtEpB,OAAA,CAACF,MAAM;MACLa,SAAS,EAAEd,MAAM,CAACwB,YAAa;MAC/BlB,OAAO,EAAEG,aAAc;MACvBgB,WAAW;MACXC,YAAY;MACZ1B,MAAM,EAAE;QACN2B,OAAO,EAAGC,QAAQ,KAAM;UACtB,GAAGA,QAAQ;UACXC,MAAM,EAAE,EAAE;UACVC,WAAW,EAAE,wBAAwB;UACrCC,SAAS,EAAE,MAAM;UACjB,SAAS,EAAE;YACTD,WAAW,EAAE;UACf;QACF,CAAC,CAAC;QACFnB,MAAM,EAAGiB,QAAQ,KAAM;UACrB,GAAGA,QAAQ;UACXI,OAAO,EAAE;QACX,CAAC;MACH;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACU,EAAA,GA9BQ7B,QAAQ;AAiCnB,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}